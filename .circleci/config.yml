version: 2.1

orbs:
  codecov: codecov/codecov@1.0.4

commands:
  setup:
    description: "Installs python packages and source module"
    steps:
      - checkout
      - run:
          name: Setup Tools
          command: sudo pip install --upgrade pip setuptools wheel coverage
      - run:
          name: Installing package
          command: sudo pip install --upgrade -e .[dev]
  test:
    description: "Run tests, possibly publishing results"
    parameters:
      publish:
        type: boolean
        default: false
    steps:
      - run:
          name: Pytest
          command: |
            coverage run --source unmock -m pytest --junitxml=junit/test-results.xml --ignore-glob=*/plugin_test.py
            coverage html --fail-under=80
            coverage xml
      - run:
          name: Pytest Plugin
          command: |
            # Should succeed - expected to raise a warning and catch it with pytest
            pytest tests/plugin_test.py
            # Test should fail (so we inverse exit codes)
            bash -c "USE_UNMOCK=True pytest -sx tests/plugin_test.py; if [[ \$? -eq 0 ]] ; then exit 1 ; else exit 0 ; fi"
            # Test should succeed - unmock up and running
            USE_UNMOCK=True pytest tests/plugin_test.py --unmock
      - when:
          condition: << parameters.publish >>
          steps:
            - store_test_results:
                path: junit
            - store_artifacts:
                path: htmlcov
            - codecov/upload

jobs:
  # Find tags here: https://circleci.com/docs/2.0/docker-image-tags.json
  linux27:  # Python 2.7.16
    docker:
      - image: circleci/python:2.7.16
    steps:
    - setup
    - test:
        publish: true

  linux34:
    docker:
      - image: circleci/python:3.4
    steps:
    - setup
    - test

  linux35:
    docker:
      - image: circleci/python:3.5
    steps:
    - setup
    - test

  linux36:
    docker:
      - image: circleci/python:3.6.8
    steps:
    - setup
    - test:
        publish: true

  linux37:  # Python 3.7.5 RC version
    docker:
      - image: circleci/python:3.7-rc
    steps:
    - setup
    - test
  
  macOS36:
    macos:
      # https://circle-macos-docs.s3.amazonaws.com/image-manifest/build-430/index.html
      # Python 3.6.5, Darwin 17.4.0, macOS 10.13.3
      xcode: "9.4.1"
    steps:
    - setup
    - test

  macOS37:
    macos:
      # https://circle-macos-docs.s3.amazonaws.com/image-manifest/build-520/index.html
      # Python 3.7.2, Darwin 18.2.0, macOS 10.14.3
      xcode: "10.2.0"
    steps:
    - setup
    - test

  deploy:
    docker:
      - image: circleci/python:3.6.8
    steps:
    - setup
    - run: git config credential.helper "/bin/bash ./.circleci/git-credentials-helper.sh"
    - run: sudo python setup.py upload

workflows:
  version: 2
  test-and-deploy:
    jobs:
      #- macOS36  # Commented out as we don't have that in CircleCI yet
      #- macOS37
      - linux27
      - linux34
      - linux35
      - linux36
      - linux37
      - deploy:
          requires:
            #- macOS36
            #- macOS37
            - linux27
            - linux34
            - linux35
            - linux36
            - linux37
          filters:
            branches:
              only: master
